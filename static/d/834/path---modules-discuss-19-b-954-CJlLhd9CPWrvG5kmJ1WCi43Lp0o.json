{"data":{"site":{"siteMetadata":{"title":"HI,DY","author":"liudingyuan"}},"markdownRemark":{"id":"e1765c3d-0a5f-5e3c-af50-06bf47540dd8","excerpt":"前端开发我们为什么要引入模块化，模块有什么优点： 复用性 一个应用总有一些相同和相似的部分，可能是某个功能，可能是某部分UI…","html":"<p>前端开发我们为什么要引入模块化，模块有什么优点：</p>\n<ul>\n<li>\n<p>复用性</p>\n<p>一个应用总有一些相同和相似的部分，可能是某个功能，可能是某部分UI。抽象出一个模块，通过复用可以大大提高我们的开发效率。</p>\n</li>\n<li>\n<p>组合性</p>\n<p>将模块进行组合可以得到新的模块，就像乐高积木一样。现在说的很多的组件化开始就是如此，将复杂、大型的应用拆解为一个个小模块，可以降低开发难度。</p>\n</li>\n<li>\n<p>隔离性</p>\n<p>模块之间不会相互耦合，我们可以单独测试、替换应用中的某个模块，便于维护。</p>\n</li>\n</ul>\n<p>在ES6之前，JavaScript并没有原生的模块语法（我想js的创造者一定没想到如今js会用来开发越来越复杂的应用），社区中诞生了许多解决方案。我们有必要来了解下目前依然在广为使用的几种方案。</p>\n<h2>IIFE</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>win<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  win<span class=\"token punctuation\">.</span>utils <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> num <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span>\n\n  utils<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">echo</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'echo: '</span><span class=\"token punctuation\">,</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span></code></pre></div>\n<p>上面的代码\b\b就是一个IIFE的例子，IIFE就是一个立即执行的\b匿名函数表达式。上述代码的执行结果为：window全局对象上新增了一个utils对象，可以调用utils对象\b里的工具\b方法。通过这个模式，我们可以暴露出指定的\b\b属性和方法，可以\b\b私有化内部的\b\b属性和帮助函数，外部无法访问。</p>\n<p>使用该方案要注意的是，我们\b始终污染了全局对象（前面例子中的\butils），\b存在被重写的风险。如果我们引入的其他库或者其他代码中使用了同名的变量，那就出事了。</p>\n<h2>CommonJS</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// utils.js</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> num <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  add\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">const</span> utils <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./utils.js'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> utils<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>这就是CommonJS，使用<code class=\"language-text\">module.exports</code>暴露模块接口，<code class=\"language-text\">require</code>导入模块。\b它解决了IIFE遗留的问题，不会污染到全局对象。</p>\n<p>Node支持这个\b\b方案，但无法在浏览器中使用。实际上它也不适合浏览器使用，因为它是同步导入模块的，这会使得浏览器等待\b模块下载造成页面空白，\b影响用户体验。</p>\n<h2>\b📦模块打包工具的做法</h2>\n<p>使用webpack打包\b上面CommonJS例子中的\b代码，得到如下结果：</p>\n<details>\n<summary>打包结果</summary>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/******/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>modules<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// webpackBootstrap</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token comment\">// The module cache</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token keyword\">var</span> installedModules <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token comment\">// The require function</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token keyword\">function</span> <span class=\"token function\">__webpack_require__</span><span class=\"token punctuation\">(</span>moduleId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token comment\">// Check if module is in cache</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>installedModules<span class=\"token punctuation\">[</span>moduleId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/******/</span> \t\t\t<span class=\"token keyword\">return</span> installedModules<span class=\"token punctuation\">[</span>moduleId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token comment\">// Create a new module (and put it into the cache)</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token keyword\">var</span> module <span class=\"token operator\">=</span> installedModules<span class=\"token punctuation\">[</span>moduleId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/******/</span> \t\t\ti<span class=\"token punctuation\">:</span> moduleId<span class=\"token punctuation\">,</span>\n<span class=\"token comment\">/******/</span> \t\t\tl<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">/******/</span> \t\t\texports<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token comment\">// Execute the module function</span>\n<span class=\"token comment\">/******/</span> \t\tmodules<span class=\"token punctuation\">[</span>moduleId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">,</span> module<span class=\"token punctuation\">,</span> module<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">,</span> __webpack_require__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token comment\">// Flag the module as loaded</span>\n<span class=\"token comment\">/******/</span> \t\tmodule<span class=\"token punctuation\">.</span>l <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token comment\">// Return the exports of the module</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token keyword\">return</span> module<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token comment\">// expose the modules object (__webpack_modules__)</span>\n<span class=\"token comment\">/******/</span> \t__webpack_require__<span class=\"token punctuation\">.</span>m <span class=\"token operator\">=</span> modules<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token comment\">// expose the module cache</span>\n<span class=\"token comment\">/******/</span> \t__webpack_require__<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> installedModules<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token comment\">// define getter function for harmony exports</span>\n<span class=\"token comment\">/******/</span> \t__webpack_require__<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">d</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> getter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>__webpack_require__<span class=\"token punctuation\">.</span><span class=\"token function\">o</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/******/</span> \t\t\tObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> enumerable<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">:</span> getter <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token comment\">// define __esModule on exports</span>\n<span class=\"token comment\">/******/</span> \t__webpack_require__<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">r</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">&amp;&amp;</span> Symbol<span class=\"token punctuation\">.</span>toStringTag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/******/</span> \t\t\tObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> Symbol<span class=\"token punctuation\">.</span>toStringTag<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">'Module'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/******/</span> \t\tObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> <span class=\"token string\">'__esModule'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token comment\">// create a fake namespace object</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token comment\">// mode &amp; 1: value is a module id, require it</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token comment\">// mode &amp; 2: merge all properties of value into the ns</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token comment\">// mode &amp; 4: return value when already ns object</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token comment\">// mode &amp; 8|1: behave like require</span>\n<span class=\"token comment\">/******/</span> \t__webpack_require__<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">t</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mode <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> value <span class=\"token operator\">=</span> <span class=\"token function\">__webpack_require__</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mode <span class=\"token operator\">&amp;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>mode <span class=\"token operator\">&amp;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">&amp;&amp;</span> value <span class=\"token operator\">&amp;&amp;</span> value<span class=\"token punctuation\">.</span>__esModule<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token keyword\">var</span> ns <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t\t__webpack_require__<span class=\"token punctuation\">.</span><span class=\"token function\">r</span><span class=\"token punctuation\">(</span>ns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t\tObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>ns<span class=\"token punctuation\">,</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> enumerable<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mode <span class=\"token operator\">&amp;</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> value <span class=\"token operator\">!=</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> key <span class=\"token keyword\">in</span> value<span class=\"token punctuation\">)</span> __webpack_require__<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>ns<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token keyword\">return</span> ns<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token comment\">// getDefaultExport function for compatibility with non-harmony modules</span>\n<span class=\"token comment\">/******/</span> \t__webpack_require__<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">n</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token keyword\">var</span> getter <span class=\"token operator\">=</span> module <span class=\"token operator\">&amp;&amp;</span> module<span class=\"token punctuation\">.</span>__esModule <span class=\"token operator\">?</span>\n<span class=\"token comment\">/******/</span> \t\t\t<span class=\"token keyword\">function</span> <span class=\"token function\">getDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> module<span class=\"token punctuation\">[</span><span class=\"token string\">'default'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">:</span>\n<span class=\"token comment\">/******/</span> \t\t\t<span class=\"token keyword\">function</span> <span class=\"token function\">getModuleExports</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> module<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t\t__webpack_require__<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>getter<span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> getter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t\t<span class=\"token keyword\">return</span> getter<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token comment\">// Object.prototype.hasOwnProperty.call</span>\n<span class=\"token comment\">/******/</span> \t__webpack_require__<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">o</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">,</span> property<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Object<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>hasOwnProperty<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">,</span> property<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token comment\">// __webpack_public_path__</span>\n<span class=\"token comment\">/******/</span> \t__webpack_require__<span class=\"token punctuation\">.</span>p <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token comment\">// Load entry module and return exports</span>\n<span class=\"token comment\">/******/</span> \t<span class=\"token keyword\">return</span> <span class=\"token function\">__webpack_require__</span><span class=\"token punctuation\">(</span>__webpack_require__<span class=\"token punctuation\">.</span>s <span class=\"token operator\">=</span> <span class=\"token string\">\"./index.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/******/</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">/************************************************************************/</span>\n<span class=\"token comment\">/******/</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">/***/</span> <span class=\"token string\">\"./index.js\"</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\">/*!******************!*\\\n  !*** ./index.js ***!\n  \\******************/</span>\n<span class=\"token comment\">/*! no static exports found */</span>\n<span class=\"token comment\">/***/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">,</span> exports<span class=\"token punctuation\">,</span> __webpack_require__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"const utils = __webpack_require__(/*! ./utils */ \\\"./utils.js\\\")\\n\\nconst result = utils.add(2)\\n\\n\\n//# sourceURL=webpack:///./index.js?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***/</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token comment\">/***/</span> <span class=\"token string\">\"./utils.js\"</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\">/*!******************!*\\\n  !*** ./utils.js ***!\n  \\******************/</span>\n<span class=\"token comment\">/*! no static exports found */</span>\n<span class=\"token comment\">/***/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">,</span> exports<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"function add(num) {\\n  return num + 1\\n}\\n\\nmodule.exports = {\\n  add\\n}\\n\\n\\n//# sourceURL=webpack:///./utils.js?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***/</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">/******/</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</details>\n<p>可以看到，webpack使用IIFE的模式自己实现了一个\b模块化方案，它将\b所有模块的代码都塞到了一个文件中。同时支持了CommonJS的语法，也没有污染全局对象。</p>\n<p>浏览器理解这些代码，\b并且打包后的文件包含了所有模块的代码，也就不存在浏览器挂起等待模块下载的情况。</p>\n<h2>ES Modules</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// utils.js</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> num <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n  add\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>add<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./utils.js'</span>\n\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>ES6原生\b支持的模块语法，\bnodejs、webpack和浏览器都支持。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">// 在浏览器中使用\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>module.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>浏览器中module script的加载是异步的，\b效果等同于设置<code class=\"language-text\">defer</code>属性。</p>\n<p>es modules设计模块是静态的，当前模块依赖哪些模块需要在文件顶部声明，不能使用在条件判断语句中。这样的设计\b给我们带来了一些好处，方便我们看出当前模块的\b外部依赖情况；利用静态\b代码分析，\b去掉没有使用到的代码，也就是<strong>tree \bshaking</strong>技术。</p>\n<p>新的语法\b提案，动态导入<code class=\"language-text\">import()</code>，可以用来做\b<strong>code split</strong>。</p>\n<h2>总结</h2>\n<p>很高兴js有了原生的模块化语法支持😊。</p>\n<hr>\n<p>参考：</p>\n<ul>\n<li><a href=\"https://tylermcginnis.com/javascript-modules-iifes-commonjs-esmodules/\">JavaScript Modules: From IIFEs to CommonJS to ES6 Modules</a></li>\n<li><a href=\"https://github.com/nzakas/understandinges6/blob/master/manuscript/13-Modules.md\">understandinges6: Modules</a></li>\n</ul>","frontmatter":{"title":"IIFE -> CommonJS -> ES modules","date":"01-29-2019"}}},"pageContext":{"slug":"/modules-discuss/","previous":null,"next":null}}